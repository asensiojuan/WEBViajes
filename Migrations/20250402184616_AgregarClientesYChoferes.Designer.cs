// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEBViajes.Data;

#nullable disable

namespace WEBViajes.Migrations
{
    [DbContext(typeof(ViajesContext))]
    [Migration("20250402184616_AgregarClientesYChoferes")]
    partial class AgregarClientesYChoferes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("WEBViajes.Models.Chofer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Choferes");
                });

            modelBuilder.Entity("WEBViajes.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WEBViajes.Models.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChoferId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("KM")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LinkPago")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Pagado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pasajero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChoferId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("WEBViajes.Models.Viaje", b =>
                {
                    b.HasOne("WEBViajes.Models.Chofer", "Chofer")
                        .WithMany("Viajes")
                        .HasForeignKey("ChoferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEBViajes.Models.Cliente", "Cliente")
                        .WithMany("Viajes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chofer");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("WEBViajes.Models.Chofer", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("WEBViajes.Models.Cliente", b =>
                {
                    b.Navigation("Viajes");
                });
#pragma warning restore 612, 618
        }
    }
}
